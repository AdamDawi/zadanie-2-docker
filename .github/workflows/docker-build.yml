name: Docker Build and Push

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
      packages: write
      contents: read

jobs:
  build-and-push:
    name: Build, scan and push
    runs-on: ubuntu-latest

    env:
      IMAGE_CACHE: ${{ vars.DOCKERHUB_USERNAME }}/zadanie-2-docker:cache
      GHCR_IMAGE: ghcr.io/${{ vars.GH_USERNAME }}/zadanie-2-docker
      IMAGE_SHA_TAG: ghcr.io/${{ vars.GH_USERNAME }}/zadanie-2-docker:sha-${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.GHCR_IMAGE}}
          tags: |
            type=ref,event=tag
            type=sha
          labels: |
            org.opencontainers.image.title=zadanie-2-docker
            org.opencontainers.image.description=Docker image dla zadania 2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Log in to DockerHub (for cache)
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image (local only for scan)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          load: true
          tags: ${{env.IMAGE_SHA_TAG}}
          cache-from: type=registry,ref=${{ env.IMAGE_CACHE }}
          cache-to: type=registry,ref=${{ env.IMAGE_CACHE }},mode=max

      - name: CVE scan with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{env.IMAGE_SHA_TAG}}
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH
          skip-dirs: /usr/local/lib/node_modules/npm/node_modules/cross-spawn # cross-spawn wyświetla się nawet po zmianie wersji, dlatego zostało wykluczone ze sprawdzenia

      - name: Build and push multi-architecture image (only if scan passed)
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=registry,ref=${{ env.IMAGE_CACHE }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
